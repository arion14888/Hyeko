from .. import loader, utils
import time

@loader.tds
class PingMod(loader.Module):
    """–ü–∏–Ω–≥ –∏ –∞–ø—Ç–∞–π–º –¥–ª—è Hikka"""

    strings = {
        "name": "Ping",
    }

    async def client_ready(self, client, db):
        self.client = client
        self.db = db

    def __init__(self):
        self.config = loader.ModuleConfig(
            "ping_text",
            "<emoji document_id=5942913498349571809>üôÇ</emoji><b>user:</b> {me}\n"
            "<emoji document_id=5936130851635990622>‚ö°Ô∏è</emoji><b>ping:</b> {ping}\n"
            "<emoji document_id=5988023995125993550>üõ†</emoji><b>uptime:</b> {uptime}",
            """–®–∞–±–ª–æ–Ω –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

            {me} - –í–∞—à–µ –∏–º—è
            {ping} - –ü–∏–Ω–≥ —é–∑–µ—Ä–±–æ—Ç–∞,
            {uptime} - –ê–ø—Ç–∞–π–º
            """
        )

    @loader.command()
    async def ping1(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø–∏–Ω–≥ –∏ –∞–ø—Ç–∞–π–º —é–∑–µ—Ä–±–æ—Ç–∞"""
        start = time.perf_counter_ns()
        msg = await message.client.send_message(message.peer_id, '‚è≥')
        ping = round((time.perf_counter_ns() - start) / 10**6, 3)
        await msg.delete()

        info = self.config["ping_text"].format(
            me=self._client.hikka_me.first_name + ' ' + (self._client.hikka_me.last_name or ''),
            ping=ping,
            uptime=utils.formatted_uptime(),
        )

        await utils.answer(message, info)

    @loader.command()
    async def setping(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–∏–Ω–≥–∞: .setping <—Ç–µ–∫—Å—Ç>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "<emoji document_id=5314413943035278948>üß†</emoji><b> –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–∏–Ω–≥–∞!")
            return

        self.config["custom_ping_text"] = args
        await utils.answer(message, "<emoji document_id=5314413943035278948>üß†</emoji><b> Ping - —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω.</b>")
